name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: pages-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (PR & Push)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload dist artifact (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy to Cloudflare Pages
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          # PostHog configuration for production builds
          # Add these in GitHub: Settings > Environments > production
          # Secrets: VITE_PUBLIC_POSTHOG_KEY; Variables (optional): VITE_PUBLIC_POSTHOG_HOST
          VITE_PUBLIC_POSTHOG_KEY: ${{ secrets.VITE_PUBLIC_POSTHOG_KEY }}
          VITE_PUBLIC_POSTHOG_HOST: ${{ vars.VITE_PUBLIC_POSTHOG_HOST }}
          # SEO / Meta configuration
          VITE_SITE_URL: ${{ vars.VITE_SITE_URL }}
          VITE_SITE_NAME: ${{ vars.VITE_SITE_NAME }}
          VITE_META_DESCRIPTION: ${{ vars.VITE_META_DESCRIPTION }}
          VITE_OG_IMAGE: ${{ vars.VITE_OG_IMAGE }}
          VITE_TWITTER_HANDLE: ${{ vars.VITE_TWITTER_HANDLE }}

      - name: Deploy with Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: pages deploy dist --project-name=carb-cycling
